/* The CSS universal selector (*) matches elements of any type. */
* {
  /* color: brown; */
  /* border: 1px dotted dodgerblue; */
}

/* Generally used for reset css */
/* 
body {
  border: 2px dotted dodgerblue;
} */

/* Type Selectors
The CSS type selector matches elements by node name. In other words, it selects all elements of the given type within a document. */
p {
  background-color: lightgreen;
}

/* We have seen ID and Class selectors */

/* .tag {
  color: gold;
}

#featured {
  background-color: gold;
} */

/* Combining selectors */
/* Applying the same property */
.tag, #featured, .score {
  background-color: aqua;
}

/* Attribute selectors */
/* The CSS attribute selector matches elements based on the element having a given attribute explicitly set, with options for defining an attribute value or substring value match. */

/* input {
  background-color: magenta;
} */

input[type="number"] {
  background-color: magenta;
}

/* Internal links, beginning with "#" */
a[href^="/"] {
  font-size: 2em;
}

a[href^="#"] {
  background-color: lightcoral;
}

/* Links with "google" anywhere in the URL */
a[href*="wiki"] {
  background-color: silver;
}

/* Links that end in ".com" */
a[href$="com"] {
  color: red;
}

/* Descendant combinator
The descendant combinator — typically represented by a single space (" ") character — combines two selectors such that elements matched by the second selector  */

/* ul li {
  background-color: deepskyblue;
} */

/* Even #toc li also works */

/* If I use Id or Class selector, need to apply to every span */
#cast li {
  color: deepskyblue;
}

/* Child combinator
The child combinator (>) is placed between two CSS selectors. It matches only those elements matched by the second selector that are the direct children of elements matched by the first. */

ol > li {
  border: 1px solid red;
  /* color: red */
}

/* Compound selector
A compound selector is a sequence of simple selectors that are not separated by a combinator. */

h2.score {
  font-style: italic;
}